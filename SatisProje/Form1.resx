<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>