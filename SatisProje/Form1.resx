<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ov70uLj8L6ljTudMNiIyAAAAAElFTkSuQmCC
</value>
  </data>
</root>